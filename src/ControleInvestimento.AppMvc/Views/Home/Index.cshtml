@model ControleInvestimento.AppMvc.ViewModels.PortfolioViewModel

@{
    ViewData["Title"] = "Home";
}

<style>
    .custom-table {
        background-color: #ffffff; /* Cor de fundo da tabela */
        border-radius: 10px; /* Borda arredondada */
        overflow: hidden; /* Oculta a barra de rolagem horizontal */
    }

        .custom-table thead th {
            background-color: #007bff; /* Cor de fundo do cabeçalho */
            color: #ffffff; /* Cor do texto do cabeçalho */
            border: none; /* Remove a borda do cabeçalho */
        }

        .custom-table tbody td {
            border: none; /* Remove as bordas das células do corpo da tabela */
        }

    .price-change {
        font-size: 16px;
    }

    .up {
        color: #28a745; /* Cor verde para mudança de preço positiva */
    }

    .down {
        color: #dc3545; /* Cor vermelha para mudança de preço negativa */
    }
</style>

<section class="container py-5">
    <div class="card bg-light rounded border-0">
        <div class="card-body">
            <div class="row mb-3">
                <h3 class="col-md-6">Meu Portfólio</h3>
                <div class="col-md-6 d-flex align-items-center justify-content-end">
                    <span class="text-muted me-2">Última atualização</span>
                    <h5 class="mb-0">@DateTime.Now.ToString("dd MMMM 'de' yyyy")</h5>
                </div>
            </div>
            <div class="row row-cols-1 row-cols-md-3 g-3">
                <div class="col">
                    <div class="card bg-primary text-white rounded shadow">
                        <div class="card-body">
                            <h5 class="card-title">Valor Portfólio</h5>
                            <h2 class="card-text">$@Model.TotalInvested</h2>
                            <p class="card-text">Valor aplicado: $@Model.TotalInvested</p>
                            <i class="bi bi-info-circle"></i>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="card bg-light rounded shadow">
                        <div class="card-body">
                            <h5 class="card-title">Total investido</h5>
                            <h2 class="card-text">$55k</h2>
                            <p class="card-text">Total de ativos investidos @Model.Assets.Count()</p>
                            <i class="bi bi-info-circle"></i>
                        </div>
                    </div>
                </div>
                <investment-diversification assets='@Model.Assets' portfolio-total-value='@Model.TotalInvested'></investment-diversification>
            </div>
            <div class="col mt-3">
                <canvas id="myChart" width="400" height="auto"></canvas>
            </div>
        </div>
    </div>
</section>
<section class="container mt-4">
    <h2 class="mb-4">Meus Ativos</h2>
    <div class="table-responsive">
        <table class="table custom-table">
            <thead>
                <tr>
                    <th scope="col">Nome</th>
                    <th scope="col">Preço Médio</th>
                    <th scope="col">Preço Atual</th>
                    <th scope="col">Variação</th>
                    <th scope="col">Total Investido</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var asset in Model.Assets)
                {
                    <tr>
                        <td>@asset.Name</td>
                        <td>$@asset.InvestmentStatics.AveragePrice</td>
                        <td>$@asset.InvestmentStatics.CurrentPrice</td>
                        <td class="price-change up"><i class="fas fa-caret-up"></i> +25%</td>
                        <td>$@asset.InvestmentStatics.TotalValue</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <a class="btn btn-secondary fy-update">Atualizar investimento</a>
    <a class="btn btn-primary fy-add">Adicionar Ativo</a>
</section>

@section Scripts {
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho'],
                datasets: [{
                    label: 'Valor do Investimento',
                    data: [10000, 10500, 11000, 11500, 12000, 12500],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        $('.fy-update').click(function () {
            $.ajax({
                url: '/Home/UpdateTransaction',
                type: 'POST',
                success: function (data) {
                    console.log(data);
                }
            });
        });

        $('.fy-add').click(function () {
            $(this).prop('disabled', true);

            $.ajax({
                url: '/Home/AddAssetTransaction',
                type: 'POST',
                success: function (data) {
                    console.log(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Erro na solicitação AJAX: ', textStatus, ', ', errorThrown);
                },
            });
        });
    </script>
}
